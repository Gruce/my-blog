diff --git a/node_modules/nuxt-site-config/dist/runtime/server/composables/useSiteConfig.js b/node_modules/nuxt-site-config/dist/runtime/server/composables/useSiteConfig.js
index d0323ae..192a451 100644
--- a/node_modules/nuxt-site-config/dist/runtime/server/composables/useSiteConfig.js
+++ b/node_modules/nuxt-site-config/dist/runtime/server/composables/useSiteConfig.js
@@ -1,4 +1,8 @@
 import { getSiteConfig } from "./getSiteConfig.js";
+
+/**
+ * @deprecated please use getSiteConfig instead
+ */
 export function useSiteConfig(e, _options) {
   return getSiteConfig(e, _options);
 }
diff --git a/node_modules/nuxt-site-config/dist/runtime/server/composables/utils.js b/node_modules/nuxt-site-config/dist/runtime/server/composables/utils.js
index 8526471..186c73c 100644
--- a/node_modules/nuxt-site-config/dist/runtime/server/composables/utils.js
+++ b/node_modules/nuxt-site-config/dist/runtime/server/composables/utils.js
@@ -1,34 +1,38 @@
-import { useRuntimeConfig } from "nitropack/runtime";
 import { fixSlashes, resolveSitePath } from "site-config-stack/urls";
-import { getNitroOrigin } from "./getNitroOrigin.js";
 import { getSiteConfig } from "./getSiteConfig.js";
+import { getNitroOrigin } from "./getNitroOrigin.js";
+
 export function createSitePathResolver(e, options = {}) {
   const siteConfig = getSiteConfig(e);
   const nitroOrigin = getNitroOrigin(e);
-  const nuxtBase = useRuntimeConfig(e).app.baseURL || "/";
+  const nuxtBase = e.context.nuxt?.baseURL || "/";
+  
   return (path) => {
     return resolveSitePath(path, {
-      ...options,
+      absolute: options.absolute,
+      withBase: options.withBase,
       siteUrl: options.canonical !== false || import.meta.prerender ? siteConfig.url : nitroOrigin,
       trailingSlash: siteConfig.trailingSlash,
       base: nuxtBase
     });
   };
 }
+
 export function withSiteTrailingSlash(e, path) {
-  const siteConfig = e.context.siteConfig?.get();
+  const siteConfig = getSiteConfig(e);
   return fixSlashes(siteConfig.trailingSlash, path);
 }
+
 export function withSiteUrl(e, path, options = {}) {
-  const siteConfig = e.context.siteConfig?.get();
-  let siteUrl = e.context.siteConfigNitroOrigin;
-  if ((options.canonical !== false || import.meta.prerender) && siteConfig.url)
-    siteUrl = siteConfig.url;
+  const siteConfig = getSiteConfig(e);
+  const nitroOrigin = getNitroOrigin(e);
+  const base = e.context.nuxt?.baseURL || "/";
+  
   return resolveSitePath(path, {
     absolute: true,
-    siteUrl,
+    siteUrl: options.canonical !== false || import.meta.prerender ? siteConfig.url : nitroOrigin,
     trailingSlash: siteConfig.trailingSlash,
-    base: e.context.nitro.baseURL,
+    base,
     withBase: options.withBase
   });
 }
